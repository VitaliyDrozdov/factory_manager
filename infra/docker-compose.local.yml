version: '3.12'

services:
  db:
    image: postgres:16-alpine
    container_name: db
    restart: always
    volumes:
      - data_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    expose:
      - "5432"
    env_file:
      - ../.env
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'" ]
      interval: 3s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ..
      dockerfile: /src/backend/Dockerfile
    container_name: backend
    restart: always
    expose:
      - "8000"
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
    image: directory:latest

  nginx:
    image: nginx:1.24-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - ../.env
    depends_on:
      - backend

volumes:
  db_data:
