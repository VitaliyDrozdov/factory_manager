version: '3.12'

services:
  db:
    image: postgres:16-alpine
    container_name: db
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    env_file:
      - ../.env
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'" ]
      interval: 3s
      timeout: 3s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  backend:
    build:
      context: ..
      dockerfile: ./src/backend/Dockerfile
    container_name: backend
    restart: always
    ports:
    - "8000:8000"
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      REDIS_URL: redis://redis:6379/1
    command: >
      bash -c "python manage.py migrate &&
          python manage.py collectstatic --clear --noinput &&
          gunicorn factory_manager.wsgi:application --bind 0.0.0.0:8000"

  nginx:
    # image: nginx:1.24-alpine
    build: ./
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - ../.env
    depends_on:
      - backend

volumes:
  db_data:
